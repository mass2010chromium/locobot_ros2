launch:

##################### Sim args (gazebo sim)
#
# True to run in sim, False otherwise. Sim is currently unimplemented.
- arg: {'name': 'sim', 'default': 'false'}
# Simulation world to launch.
- arg: {'name': 'world_file', 'default': '$(env TURTLEBOT_GAZEBO_WORLD_FILE "")'}
# Whether the sim will have a graphical interface or not.
- arg: {'name': 'gui', 'default': 'true'}
#
#####################


##################### Component args
#
# NOTE: We only tested with kobuki. But now, the Create3 is up and running...
# Options: [kobuki, create]
- arg: {'name': 'base', 'default': 'kobuki'}
# Serial port the base is on. (Maybe /dev/ttyX)
- arg: {'name': 'base_port', 'default': '/dev/kobuki'}
# Serial port the lidar is on.
- arg: {'name': 'lidar_port', 'default': '/dev/rplidar'}
# URDF file to load. The "modified" one is the one robot in lab that's been slightly raised.
- arg: {'name': 'robot_model', 'default': '$(find-pkg-share locobot_description)/urdf/interbotix_locobot_description_modified.urdf'}

- arg: {'name': 'use_arm', 'default': 'true'}
#
#####################


# Unreplicated:
#  <param name="/use_sim_time" value="$(arg sim)"/>
#  <!-- Copying from turtlebot code. Unsure where this is used. -->  
#  <param name="robot/name" value="$(optenv ROBOT turtlebot)"/>
#  <param name="robot/type" value="locobot_lidar"/>

- node:
    pkg:    robot_state_publisher
    exec:   robot_state_publisher
    name:   robot_state_publisher
    param:
    - {'name': 'publish_frequency', 'value': 30.0}
    - name: robot_description
      type: str
      value: "$(command 'cat $(var robot_model)')"

- group:
    if: '$(var sim)'
    children:
    - include:
        file: '$(find-pkg-share gazebo_ros)/launch/empty_world.launch'
        arg:
        - {'name': 'use_sim_time', 'value': 'true'}
        - {'name': 'debug', 'value': 'false'}
        - {'name': 'gui', 'value': '$(var gui)'}
        - {'name': 'world_name', 'value': '$(var world_file)'}
    - node:
        pkg:  gazebo_ros
        exec: spawn_model
        name: spawn_turtlebot_model
        args: "$(env ROBOT_INITIAL_POSE '') -unpause -urdf -param robot_description -model mobile_base"

- group:
    unless: '$(var sim)'
    children:
    - group:
        # Kobuki base group
        children:
        - node:
            pkg:  kobuki_node
            exec: kobuki_ros_node
            name: kobuki_ros_node
            param:
            - from: '$(find-pkg-share kobuki_node)/config/kobuki_node_params.yaml'
            remap:
            - {'from': 'commands/velocity', 'to': '/cmd_vel'}
        #- include:
        #    file: '$(find-pkg-share kobuki_node)/launch/kobuki_node-launch.py'
    - include:
        file: '$(find-pkg-share locobot_navigation)/launch/lidar_launch.yaml'
    - include:
        file: '$(find-pkg-share locobot_control)/launch/dynamixel_controllers_launch.yaml'
